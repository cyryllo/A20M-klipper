# This file contains common pin mappings for the Geeetech GT2560 v3
# board. GT2560 v3 board uses a firmware compiled for the AVR
# atmega2560. This config is for A10 with TMC2209 in UART, 
# mini12864 display, BLTouch, chamber temperature and input shaping.

[include mainsail.cfg]

# See docs/Config_Reference.md for a description of parameters.
[mcu]
serial: /dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0

[printer]
kinematics: cartesian
max_velocity: 200
max_accel: 1500
max_z_velocity: 20
max_z_accel: 500

[stepper_x]
step_pin: PC0
dir_pin: !PG2
enable_pin: !PC2
microsteps: 16
#rotation_distance: 40.08
rotation_distance: 39.579
endstop_pin: ^!PA2
position_endstop: 0
#position_min: 0
position_max: 250
#homing_positive_dir: 125
homing_speed: 50.0

[stepper_y]
step_pin: PC6
dir_pin: !PC4
enable_pin: !PA7
microsteps: 16
#rotation_distance: 40.21
rotation_distance:40.270
endstop_pin: ^!PA6
position_endstop: 0
#position_min: 0
position_max: 230
#homing_positive_dir: 125
homing_speed: 50.0

[stepper_z]
step_pin: PA3
dir_pin: PA1
enable_pin: !PA5
microsteps: 16
#rotation_distance: 7.8
rotation_distance: 7.862
position_min: -2.0
endstop_pin: probe:z_virtual_endstop
#endstop_pin: ^!PC7
#position_endstop: 250
position_max: 230
homing_speed: 10.0

[stepper_z1]
step_pin: PL6
dir_pin: PL4
enable_pin: !PG0
microsteps: 16
#rotation_distance: 7.8
rotation_distance: 7.862
;position_min: -2.0
;endstop_pin: probe:z_virtual_endstop
;position_max: 250
;homing_speed: 10.0

[extruder]
step_pin: PL3
dir_pin: !PL5
enable_pin: !PB6
microsteps: 16
rotation_distance: 22.6789511   #Bondtech 5mm Bore Drive Gears
gear_ratio: 50:17               #BMG Gear Ratio
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PB4
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PK3
#control: pid
#pid_Kp: 22.2
#pid_Ki: 1.08
#pid_Kd: 114
min_temp: 0
max_temp: 250
#pressure_advance:0.34
max_extrude_only_distance: 600
max_extrude_cross_section: 10

# Dual extruder support.
[extruder_stepper extruder1]
extruder: extruder
step_pin: PL0
dir_pin: !PL2
enable_pin: !PL1
microsteps: 16
rotation_distance: 22.6789511   #Bondtech 5mm Bore Drive Gears
gear_ratio: 50:17               #BMG Gear Ratio
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
##nozzle_diameter: 0.400
##filament_diameter: 1.750
##shared_heater: extruder
##heater_pin: PE5
##sensor_type: EPCOS 100K B57560G104F
##sensor_pin: PK1
##control: pid
##pid_Kp: 22.2
##pid_Ki: 1.08
##pid_Kd: 114
##min_temp: 0
##max_temp: 275

[gcode_macro T0]
gcode:
    # Deactivate stepper in my_extruder_stepper
    SYNC_EXTRUDER_MOTION EXTRUDER=extruder1 MOTION_QUEUE=
    # Activate stepper in extruder
    SYNC_EXTRUDER_MOTION EXTRUDER=extruder MOTION_QUEUE=extruder

[gcode_macro T1]
gcode:
    SYNC_EXTRUDER_MOTION EXTRUDER=extruder MOTION_QUEUE=
    # Activate stepper in my_extruder_stepper
    SYNC_EXTRUDER_MOTION EXTRUDER=extruder1 MOTION_QUEUE=extruder


[gcode_macro ACTIVATE_EXTRUDER]
#description: Replaces built-in macro for a X-in, 1-out extruder configuration SuperSlicer fix
rename_existing: ACTIVATE_EXTRUDER_BASE
gcode:
    {% if 'EXTRUDER' in params %}
      {% set ext = params.EXTRUDER|default(EXTRUDER) %}
      {% if ext == "extruder"%}
        {action_respond_info("Switching to extruder0.")}
        T0
      {% elif ext == "extruder1" %}
        {action_respond_info("Switching to extruder1.")}
        T1
      {% else %}
        {action_respond_info("EXTRUDER value being passed.")}
        ACTIVATE_EXTRUDER_BASE EXTRUDER={ext}
      {% endif %}
    {% endif %}

[heater_bed]
heater_pin: PG5
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PK2
min_temp: 0
max_temp: 120
#control: pid
#pid_Kp: 182.46
#pid_Ki: 35.92
#pid_Kd: 231.70

[bltouch]
sensor_pin: ^PC7
control_pin: PB5
x_offset: -39
y_offset: 2
z_offset: 1.7
speed: 5.0
samples: 1
sample_retract_dist: 8.0

[bed_mesh]
speed: 80
horizontal_move_z: 5
mesh_min: 50,20
mesh_max: 200, 220
probe_count: 3,3

[safe_z_home]
home_xy_position: 158,125
speed: 50
z_hop: 10
z_hop_speed: 5

[fan]
pin: PH6
cycle_time: 0.150
kick_start_time: 0.300

[display]
lcd_type: st7920
cs_pin: PE3
sclk_pin: PD0
sid_pin: PC1
#   The pins connected to an st7920 type lcd. These parameters must be
#   provided.
encoder_pins: ^PH0, ^PH1
click_pin: ^!PD2

## Some micro-controller boards may require an spi bus to be specified:
#spi_bus: spi
## Alternatively, some micro-controller boards may work with software spi:
#spi_software_miso_pin: EXP2_1
#spi_software_mosi_pin: EXP2_6
#spi_software_sclk_pin: EXP2_2


# ================================================================================
# GCode Macros:
# These macros intercept gcode and replace them with the macro defined.
# GCode WIKI: https://reprap.org/wiki/G-code
# ================================================================================
# ================================================================================
# GCode Macro: START_PRINT
# Add START_PRINT in your slicers starting script. 
# ================================================================================
[gcode_macro PRINT_START]
gcode:
    {% set target_bed = params.BED|int %}
    {% set target_extruder = params.EXTRUDER|int %}

    M190 S{target_bed}            ; set and wait for bed to reach temp
    
    M117 Homing...                 ; display message
    G28; Home all axes    
    Z_TILT_ADJUST
    BED_MESH_CALIBRATE    

    
    
    T0
    G92 E0
    G90
    G0 X0 F6000
    M109 S{target_extruder}       ; set and wait for hot end to reach temp
    G91
    G1 E400 F50;
    G92 E0;
    G90
    G92 E0
    M117 Printing...
# ================================================================================
# GCode Macro: END_PRINT
# Add END_PRINT in your slicers ending script
# ================================================================================
[gcode_macro PRINT_END]
gcode:
    G1 Y190 F1500; bring Y up front 
    G10 ; retract
    G91; Relative Positioning
    G1 Z+10; Move Z up so it doesn't hit anything
    G1 E-10 F300; Retract-10
    G90; Absolute Positioning
    G1 X10 Y200 F2000; Move to X10, Y220
    M104 S0; Turn off Extrude (set it to 0)
    M140 S0; Turn off Bed (set it to 0)
    M106 S0; turn off cooling fan
    M84; Disable steppers
# ================================================================================
# GCode Macro G29
# Fires when G29 is sent to the printer
# ================================================================================

[gcode_macro G29]
gcode:
  {% set t = params.T|default(0)|float %}

  {% if printer.idle_timeout.state == "Printing" %}
    {action_respond_info("This command cannot be used while printing")}
  {% elif printer.toolhead.homed_axes != "xyz" %}
    {action_respond_info("Please home XYZ first")}
  {% else %}
    SAVE_GCODE_STATE NAME=G29_state
    G90
    G1 Z10 F240
    {% if t > 30.0 %}
      M190 S{t}
    {% endif %}
    BED_MESH_CALIBRATE
    {% if 'S' in params %}
      M140 S{params.S}
    {% endif %}
    G90
    G1 Z10 F240
    G1 X150 Y155 F6000
    RESTORE_GCODE_STATE NAME=G29_state MOVE=0
  {% endif %}


[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
  TURN_OFF_HEATERS
  CLEAR_PAUSE
  SDCARD_RESET_FILE
  BASE_CANCEL_PRINT

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  SAVE_GCODE_STATE NAME=PAUSE_state
  BASE_PAUSE
  G91
  G1 E-{E} F2100
  G1 Z{z_safe} F900
  G90
  G1 X{x_park} Y{y_park} F6000

[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### end of definitions #####
  G91
  G1 E{E} F2100
  RESTORE_GCODE_STATE NAME=PAUSE_state
  BASE_RESUME

# Enable object exclusion
[exclude_object]


[gcode_macro M486]
gcode:
  # Parameters known to M486 are as follows:
  #   [C<flag>] Cancel the current object
  #   [P<index>] Cancel the object with the given index
  #   [S<index>] Set the index of the current object.
  #       If the object with the given index has been canceled, this will cause
  #       the firmware to skip to the next object. The value -1 is used to
  #       indicate something that isn’t an object and shouldn’t be skipped.
  #   [T<count>] Reset the state and set the number of objects
  #   [U<index>] Un-cancel the object with the given index. This command will be
  #       ignored if the object has already been skipped

  {% if 'exclude_object' not in printer %}
    {action_raise_error("[exclude_object] is not enabled")}
  {% endif %}

  {% if 'T' in params %}
    EXCLUDE_OBJECT RESET=1

    {% for i in range(params.T | int) %}
      EXCLUDE_OBJECT_DEFINE NAME={i}
    {% endfor %}
  {% endif %}

  {% if 'C' in params %}
    EXCLUDE_OBJECT CURRENT=1
  {% endif %}

  {% if 'P' in params %}
    EXCLUDE_OBJECT NAME={params.P}
  {% endif %}

  {% if 'S' in params %}
    {% if params.S == '-1' %}
      {% if printer.exclude_object.current_object %}
        EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object}
      {% endif %}
    {% else %}
      EXCLUDE_OBJECT_START NAME={params.S}
    {% endif %}
  {% endif %}

  {% if 'U' in params %}
    EXCLUDE_OBJECT RESET=1 NAME={params.U}
  {% endif %}


# ================================================================================
# Disaable Octoprint Menu
# ================================================================================
[menu __main __octoprint]
type: disabled

######################################
###########     Screws     ###########
######################################

[bed_screws]
screw1: 46, 46
screw2: 46, 194
screw3: 194, 46
screw4: 194, 194

[screws_tilt_adjust]
screw1: 81, 45
screw1_name: front left screw
screw2: 250, 45
screw2_name: front right screw
screw3: 250, 218
screw3_name: rear right screw
screw4: 81, 218
screw4_name: rear left screw
horizontal_move_z: 10.
speed: 50.
screw_thread: CW-M3

[z_tilt]
##  Use Z_TILT_ADJUST to level the bed left to right.
##  z_positions: Location of toolhead

##--------------------------------------------------------------------
## Uncomment below for 250mm build
z_positions:
    -32, 180
    280, 180
points:
    55, 125
    240, 125

speed: 200
horizontal_move_z: 5
retries: 5
retry_tolerance: 0.5

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 25.225
#*# pid_ki = 1.274
#*# pid_kd = 124.863
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 69.650
#*# pid_ki = 2.357
#*# pid_kd = 514.541
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.003750, -0.072500, -0.067500, -0.121250, -0.033750
#*# 	0.006250, -0.018750, 0.045000, 0.020000, 0.088750
#*# 	0.097500, 0.048750, 0.076250, -0.027500, -0.008750
#*# 	0.012500, 0.021250, 0.065000, -0.006250, 0.005000
#*# 	-0.061250, -0.055000, -0.010000, -0.091250, -0.068750
#*# tension = 0.2
#*# min_x = 49.99
#*# algo = lagrange
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 20.01
#*# x_count = 5
#*# max_y = 200.0
#*# mesh_x_pps = 2
#*# max_x = 200.0
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 57.2
#*# shaper_type_y = ei
#*# shaper_freq_y = 59.6
